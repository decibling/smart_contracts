{
  "version": "3.3",
  "log": [
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "6c2007adc8e8b4fd61e0aba3d222a7221e641c70639cbf526812b77d99fc8da0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStaking": {
        "src": "contracts/DeciblingStaking.sol:8",
        "version": {
          "withMetadata": "be9704f0e5a84da993bd11acf4fcb41cc06c856224d06092cd5fdf2a5350e51f",
          "withoutMetadata": "849ea7253039f5aaded9120864faf33d858d1b2ca06f43540ce4b6ca89ec1ea3",
          "linkedWithoutMetadata": "849ea7253039f5aaded9120864faf33d858d1b2ca06f43540ce4b6ca89ec1ea3"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address payable)",
          "newPool(string,uint256,uint256)",
          "updatePool(string,uint256,uint256)",
          "updatePoolOwner(string,address payable)",
          "stake(string,uint256)",
          "unstake(string,uint256)",
          "issueToken(struct DeciblingStaking.ClaimInfo[])",
          "updatePlatformFeeRecipient(address payable)",
          "updatePlatformFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStaking",
            "src": "contracts/DeciblingStaking.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "platformFee",
            "src": "contracts/DeciblingStaking.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:10"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:12"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:14"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:43"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)593_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)604_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "baseToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)593_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStakingMock": {
        "src": "contracts/mock/MockDeciblingStaking.sol:6",
        "version": {
          "withMetadata": "2fa7f32861cad2f1cd4a532ec737b901cf83df044de7e72cc5515f65d163a493",
          "withoutMetadata": "284b38e5c35482bc1a408d6c424510e12a709bc2e356316681d644438b84a0cf",
          "linkedWithoutMetadata": "284b38e5c35482bc1a408d6c424510e12a709bc2e356316681d644438b84a0cf"
        },
        "inherit": [
          "DeciblingStaking",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStakingMock",
            "src": "contracts/mock/MockDeciblingStaking.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:10"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:12"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:14"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:43"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)593_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)604_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "baseToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)593_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "6c2007adc8e8b4fd61e0aba3d222a7221e641c70639cbf526812b77d99fc8da0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStaking": {
        "src": "contracts/DeciblingStaking.sol:8",
        "version": {
          "withMetadata": "ef6a5e5d12f87fd0377ea4debbb09e5ad8cb28dda11ab5b7dcc2578516c671a4",
          "withoutMetadata": "849ea7253039f5aaded9120864faf33d858d1b2ca06f43540ce4b6ca89ec1ea3",
          "linkedWithoutMetadata": "849ea7253039f5aaded9120864faf33d858d1b2ca06f43540ce4b6ca89ec1ea3"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address payable)",
          "newPool(string,uint256,uint256)",
          "updatePool(string,uint256,uint256)",
          "updatePoolOwner(string,address payable)",
          "stake(string,uint256)",
          "unstake(string,uint256)",
          "issueToken(struct DeciblingStaking.ClaimInfo[])",
          "updatePlatformFeeRecipient(address payable)",
          "updatePlatformFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStaking",
            "src": "contracts/DeciblingStaking.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "platformFee",
            "src": "contracts/DeciblingStaking.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:10"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:12"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:14"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:43"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)593_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)604_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "baseToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)593_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStakingMock": {
        "src": "contracts/mock/MockDeciblingStaking.sol:6",
        "version": {
          "withMetadata": "fccfeeb8b79a4694afa1cd3486cf06c137542d7cc77aa26860b0927460ae5d8f",
          "withoutMetadata": "284b38e5c35482bc1a408d6c424510e12a709bc2e356316681d644438b84a0cf",
          "linkedWithoutMetadata": "284b38e5c35482bc1a408d6c424510e12a709bc2e356316681d644438b84a0cf"
        },
        "inherit": [
          "DeciblingStaking",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStakingMock",
            "src": "contracts/mock/MockDeciblingStaking.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:10"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:12"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:14"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:43"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)593_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)604_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "baseToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)593_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "6c2007adc8e8b4fd61e0aba3d222a7221e641c70639cbf526812b77d99fc8da0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStaking": {
        "src": "contracts/DeciblingStaking.sol:8",
        "version": {
          "withMetadata": "05e4a55a864221ccb31d704bb3fbc87a2dbcc8a2fa35ec667e692c2acf5da4af",
          "withoutMetadata": "e329c2d833e625bcb50b6615dccb069ccd1ab58a7bfb069a8d777ac40a33e141",
          "linkedWithoutMetadata": "e329c2d833e625bcb50b6615dccb069ccd1ab58a7bfb069a8d777ac40a33e141"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address payable)",
          "newPool(string,uint256,uint256)",
          "updatePool(string,uint256,uint256)",
          "updatePoolOwner(string,address payable)",
          "stake(string,uint256)",
          "unstake(string,uint256)",
          "issueToken(struct DeciblingStaking.ClaimInfo[])",
          "updatePlatformFeeRecipient(address payable)",
          "updatePlatformFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStaking",
            "src": "contracts/DeciblingStaking.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "platformFee",
            "src": "contracts/DeciblingStaking.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:10"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:12"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:14"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:43"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)593_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)604_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "baseToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)593_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStakingMock": {
        "src": "contracts/mock/MockDeciblingStaking.sol:6",
        "version": {
          "withMetadata": "db1c8d5023dfee8da5d88ebe8f067abce285f566c7d65a198de143f1b4d7a9ac",
          "withoutMetadata": "a60ee27c59bc348e15d3a370c70ec6dd5f6b4fc2e23bca6800aebbab877c419b",
          "linkedWithoutMetadata": "a60ee27c59bc348e15d3a370c70ec6dd5f6b4fc2e23bca6800aebbab877c419b"
        },
        "inherit": [
          "DeciblingStaking",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStakingMock",
            "src": "contracts/mock/MockDeciblingStaking.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:10"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:12"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:14"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:43"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)593_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)604_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "baseToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)593_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "6c2007adc8e8b4fd61e0aba3d222a7221e641c70639cbf526812b77d99fc8da0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStaking": {
        "src": "contracts/DeciblingStaking.sol:8",
        "version": {
          "withMetadata": "c62c0dd6d4589892226d20e5cd754e61717839e3e61289019f46b5b7d342d732",
          "withoutMetadata": "15b60fe2a647fef0d31ab103f7415f89bb20bb783f000d11ca046a2fc6893dad",
          "linkedWithoutMetadata": "15b60fe2a647fef0d31ab103f7415f89bb20bb783f000d11ca046a2fc6893dad"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address payable)",
          "newPool(string,uint256,uint256)",
          "updatePool(string,uint256,uint256)",
          "updatePoolOwner(string,address payable)",
          "stake(string,uint256)",
          "unstake(string,uint256)",
          "issueToken(struct DeciblingStaking.ClaimInfo[])",
          "updatePlatformFeeRecipient(address payable)",
          "updatePlatformFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStaking",
            "src": "contracts/DeciblingStaking.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "platformFee",
            "src": "contracts/DeciblingStaking.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:10"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:12"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:14"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:43"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)593_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)604_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "baseToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)593_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStakingMock": {
        "src": "contracts/mock/MockDeciblingStaking.sol:6",
        "version": {
          "withMetadata": "bdfa302e4500952352bdfe7704087e110636fed64ab6c46c5a9dbefbfbd05384",
          "withoutMetadata": "e2b15ba56fd6d1824806544ad6ae06484c37081790af958e1c7eb5fc9bd2dd93",
          "linkedWithoutMetadata": "e2b15ba56fd6d1824806544ad6ae06484c37081790af958e1c7eb5fc9bd2dd93"
        },
        "inherit": [
          "DeciblingStaking",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStakingMock",
            "src": "contracts/mock/MockDeciblingStaking.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:10"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:12"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:14"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:43"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)593_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)604_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "baseToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)593_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "6c2007adc8e8b4fd61e0aba3d222a7221e641c70639cbf526812b77d99fc8da0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStaking": {
        "src": "contracts/DeciblingStaking.sol:8",
        "version": {
          "withMetadata": "743381cef337f26c415fa099b2e29d923e1b7bcd237ac297588ac2ce07594dcf",
          "withoutMetadata": "1efcbf36fce870b5453abf5c48bd63ec21857932881a24cd9ab0ea277ace4790",
          "linkedWithoutMetadata": "1efcbf36fce870b5453abf5c48bd63ec21857932881a24cd9ab0ea277ace4790"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address payable)",
          "newPool(string,uint256,uint256)",
          "updatePool(string,uint256,uint256)",
          "updatePoolOwner(string,address payable)",
          "stake(string,uint256)",
          "unstake(string,uint256)",
          "issueToken(struct DeciblingStaking.ClaimInfo[])",
          "updatePlatformFeeRecipient(address payable)",
          "updatePlatformFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStaking",
            "src": "contracts/DeciblingStaking.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "platformFee",
            "src": "contracts/DeciblingStaking.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:10"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:12"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:14"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:43"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)593_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)604_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "baseToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)593_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStakingMock": {
        "src": "contracts/mock/MockDeciblingStaking.sol:6",
        "version": {
          "withMetadata": "dfe8f35e8675684b98966cab9a93f5c984f18c58f8ee32ada0c01cef57f723fa",
          "withoutMetadata": "3d62c224d4d7acb840171b5c4e27456d907356f0eba30837b59afd8c526ebf4e",
          "linkedWithoutMetadata": "3d62c224d4d7acb840171b5c4e27456d907356f0eba30837b59afd8c526ebf4e"
        },
        "inherit": [
          "DeciblingStaking",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStakingMock",
            "src": "contracts/mock/MockDeciblingStaking.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:10"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:12"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:14"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:43"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)593_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)604_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "baseToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)593_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "6c2007adc8e8b4fd61e0aba3d222a7221e641c70639cbf526812b77d99fc8da0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStaking": {
        "src": "contracts/DeciblingStaking.sol:8",
        "version": {
          "withMetadata": "4d1a5413dc41cba22b7db5aba55543a84b1d135693aab0bdf07b37424f800243",
          "withoutMetadata": "723a32a418b729f3335ac345173ee46d70b0e38fce8d500cab82364252bf9449",
          "linkedWithoutMetadata": "723a32a418b729f3335ac345173ee46d70b0e38fce8d500cab82364252bf9449"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address payable)",
          "newPool(string,uint256,uint256)",
          "updatePool(string,uint256,uint256)",
          "stake(string,uint256)",
          "unstake(string,uint256)",
          "issueToken(struct DeciblingStaking.ClaimInfo[])",
          "updatePlatformFeeRecipient(address payable)",
          "updatePlatformFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStaking",
            "src": "contracts/DeciblingStaking.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "platformFee",
            "src": "contracts/DeciblingStaking.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:10"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:12"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:14"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:43"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)593_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)604_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "r_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "base_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)593_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStakingMock": {
        "src": "contracts/mock/MockDeciblingStaking.sol:6",
        "version": {
          "withMetadata": "963952c7f950db010d90e814cb88fd95ab62187f5502d412c1eb9f7812413cca",
          "withoutMetadata": "ba2e48260da34ab8dce18ee9e153e5d30629a5044096b7bdbf98debfcc750db2",
          "linkedWithoutMetadata": "ba2e48260da34ab8dce18ee9e153e5d30629a5044096b7bdbf98debfcc750db2"
        },
        "inherit": [
          "DeciblingStaking",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStakingMock",
            "src": "contracts/mock/MockDeciblingStaking.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:10"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:12"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:14"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:43"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)593_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)604_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "r_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "base_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)593_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "6c2007adc8e8b4fd61e0aba3d222a7221e641c70639cbf526812b77d99fc8da0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStaking": {
        "src": "contracts/DeciblingStaking.sol:8",
        "version": {
          "withMetadata": "f84d166f10dbecf853bbbb2059bfefa28cfccb331fdb68226dbe97ac6877aa02",
          "withoutMetadata": "3c0cea61685914659a4e6a22545d02788c4c03af3095b90dfaf9bac2e307cd93",
          "linkedWithoutMetadata": "3c0cea61685914659a4e6a22545d02788c4c03af3095b90dfaf9bac2e307cd93"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address payable)",
          "newPool(string,uint256,uint256)",
          "updatePool(string,uint256,uint256)",
          "stake(string,uint256)",
          "unstake(string,uint256)",
          "issueToken(struct DeciblingStaking.ClaimInfo[])",
          "updatePlatformFeeRecipient(address payable)",
          "updatePlatformFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStaking",
            "src": "contracts/DeciblingStaking.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "platformFee",
            "src": "contracts/DeciblingStaking.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:10"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:12"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:14"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:43"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)593_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)604_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "r_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "base_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)593_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStakingMock": {
        "src": "contracts/mock/MockDeciblingStaking.sol:6",
        "version": {
          "withMetadata": "58f0aa4c369ffa299ad3dc60033a199aa6eacb84310217033179d95674bb9560",
          "withoutMetadata": "3580e02c8a1d69a4f4794f756d7073ed7fb81d7b8511442c53120f1ad246be6e",
          "linkedWithoutMetadata": "3580e02c8a1d69a4f4794f756d7073ed7fb81d7b8511442c53120f1ad246be6e"
        },
        "inherit": [
          "DeciblingStaking",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStakingMock",
            "src": "contracts/mock/MockDeciblingStaking.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:10"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:12"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:14"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:43"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)593_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)604_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "r_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "base_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)593_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "6c2007adc8e8b4fd61e0aba3d222a7221e641c70639cbf526812b77d99fc8da0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStaking": {
        "src": "contracts/DeciblingStaking.sol:8",
        "version": {
          "withMetadata": "687e2fc63f607eeae9c657cc2a2f1ead3395d6ee3c8bed7616a7b93ffd18937e",
          "withoutMetadata": "bf50447436823bf16fbcb2224ea1654278702ac7fbd643c7df28834c1d5e001a",
          "linkedWithoutMetadata": "bf50447436823bf16fbcb2224ea1654278702ac7fbd643c7df28834c1d5e001a"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address payable)",
          "newPool(string,uint256,uint256)",
          "updatePool(string,uint256,uint256)",
          "stake(string,uint256)",
          "unstake(string,uint256)",
          "issueToken(struct DeciblingStaking.ClaimInfo[])",
          "updatePlatformFeeRecipient(address payable)",
          "updatePlatformFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStaking",
            "src": "contracts/DeciblingStaking.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "platformFee",
            "src": "contracts/DeciblingStaking.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:10"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:12"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:14"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:43"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)593_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)604_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "r_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "base_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)593_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStakingMock": {
        "src": "contracts/mock/MockDeciblingStaking.sol:6",
        "version": {
          "withMetadata": "8bef94980c98d34b895aba5dc8f464d6548c56032983a27124e7db7721ad2d62",
          "withoutMetadata": "bad6252d13151533515b8707791bd1976e4ade04da16dd6a36ebfaf085e05414",
          "linkedWithoutMetadata": "bad6252d13151533515b8707791bd1976e4ade04da16dd6a36ebfaf085e05414"
        },
        "inherit": [
          "DeciblingStaking",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStakingMock",
            "src": "contracts/mock/MockDeciblingStaking.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:10"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:12"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:14"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:43"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)593_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)593_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)604_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)604_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "r_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "base_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)593_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "c870506d3be28d83c520d2df5af16f87156de4339a70af4005ca3a8520760014",
          "withoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6",
          "linkedWithoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "52d38ba1916f5287d4df0fb25cc17845d442abe11584353d06f3a071369482b8",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "7d01180486efa7032993ba43145e54bb3a49de93a7aa697697fccba224b1be23",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "858748f602e56e41ed0e06ba6a8769c84c9221e13111a82d147af88c350e50c2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "2a6c0536e16fb8097a3d519cdbc47c43bd26c8ca9b67268e4503bd121708173d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "6c2007adc8e8b4fd61e0aba3d222a7221e641c70639cbf526812b77d99fc8da0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingAuction": {
        "src": "contracts/DeciblingAuction.sol:11",
        "version": {
          "withMetadata": "8a6dd4f55e0d78b5ca98c99f5994944f440b09f0947a6242876eb279468719d9",
          "withoutMetadata": "b52af862250e717ab04f1e659d343e83ae396880aa2ba0e5ce5824eadafc2eb4",
          "linkedWithoutMetadata": "b52af862250e717ab04f1e659d343e83ae396880aa2ba0e5ce5824eadafc2eb4"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address,address payable)",
          "createNFT(string,string)",
          "createBidding(string,uint256,uint256,uint256,uint256)",
          "bid(string,uint256)",
          "settleBiddingSession(string)",
          "updateBidEndtime(string,uint256)",
          "updatePlatformFees(uint256,uint256)",
          "updatePlatformFeeRecipient(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingAuction",
            "src": "contracts/DeciblingAuction.sol:65"
          },
          {
            "kind": "state-variable-assignment",
            "name": "firstSaleFee",
            "src": "contracts/DeciblingAuction.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "secondSaleFee",
            "src": "contracts/DeciblingAuction.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1708_storage",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:14"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IERC20)244",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:15"
            },
            {
              "label": "firstSaleFee",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:18"
            },
            {
              "label": "secondSaleFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:19"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "12",
              "type": "t_address_payable",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:22"
            },
            {
              "label": "listNFT",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_string_memory_ptr,t_struct(AudioInfo)3236_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:52"
            },
            {
              "label": "tokenIdMapping",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:53"
            },
            {
              "label": "auctions",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_struct(Auction)3224_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:54"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_struct(TopBid)3211_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)244": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(AudioStatus)3204": {
              "label": "enum DeciblingAuction.AudioStatus",
              "members": [
                "MINTED",
                "BIDDING"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(AudioInfo)3236_storage)": {
              "label": "mapping(string => struct DeciblingAuction.AudioInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Auction)3224_storage)": {
              "label": "mapping(uint256 => struct DeciblingAuction.Auction)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TopBid)3211_storage)": {
              "label": "mapping(uint256 => struct DeciblingAuction.TopBid)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Auction)3224_storage": {
              "label": "struct DeciblingAuction.Auction",
              "members": [
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "increment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "resulted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(AudioInfo)3236_storage": {
              "label": "struct DeciblingAuction.AudioInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "saleCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "status",
                  "type": "t_enum(AudioStatus)3204",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Counter)1708_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TopBid)3211_storage": {
              "label": "struct DeciblingAuction.TopBid",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "c870506d3be28d83c520d2df5af16f87156de4339a70af4005ca3a8520760014",
          "withoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6",
          "linkedWithoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "52d38ba1916f5287d4df0fb25cc17845d442abe11584353d06f3a071369482b8",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "7d01180486efa7032993ba43145e54bb3a49de93a7aa697697fccba224b1be23",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "858748f602e56e41ed0e06ba6a8769c84c9221e13111a82d147af88c350e50c2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "2a6c0536e16fb8097a3d519cdbc47c43bd26c8ca9b67268e4503bd121708173d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "6c2007adc8e8b4fd61e0aba3d222a7221e641c70639cbf526812b77d99fc8da0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingAuction": {
        "src": "contracts/DeciblingAuction.sol:11",
        "version": {
          "withMetadata": "5c0e191b4f438114beb83a07e69ea3d535a97d2577599823d3ff325c90c47445",
          "withoutMetadata": "3746a5db604d44de2f96c4fed085b1f670f252c273e80f43dbfe475376c2f8a2",
          "linkedWithoutMetadata": "3746a5db604d44de2f96c4fed085b1f670f252c273e80f43dbfe475376c2f8a2"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address,address payable)",
          "createNFT(string,string)",
          "createBidding(string,uint256,uint256,uint256,uint256)",
          "bid(string,uint256)",
          "settleBiddingSession(string)",
          "updateBidEndtime(string,uint256)",
          "updatePlatformFees(uint256,uint256)",
          "updatePlatformFeeRecipient(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingAuction",
            "src": "contracts/DeciblingAuction.sol:65"
          },
          {
            "kind": "state-variable-assignment",
            "name": "firstSaleFee",
            "src": "contracts/DeciblingAuction.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "secondSaleFee",
            "src": "contracts/DeciblingAuction.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1708_storage",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:14"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IERC20)244",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:15"
            },
            {
              "label": "firstSaleFee",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:18"
            },
            {
              "label": "secondSaleFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:19"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "12",
              "type": "t_address_payable",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:22"
            },
            {
              "label": "listNFT",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_string_memory_ptr,t_struct(AudioInfo)3236_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:52"
            },
            {
              "label": "tokenIdMapping",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:53"
            },
            {
              "label": "auctions",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_struct(Auction)3224_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:54"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_struct(TopBid)3211_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)244": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(AudioStatus)3204": {
              "label": "enum DeciblingAuction.AudioStatus",
              "members": [
                "MINTED",
                "BIDDING"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(AudioInfo)3236_storage)": {
              "label": "mapping(string => struct DeciblingAuction.AudioInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Auction)3224_storage)": {
              "label": "mapping(uint256 => struct DeciblingAuction.Auction)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TopBid)3211_storage)": {
              "label": "mapping(uint256 => struct DeciblingAuction.TopBid)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Auction)3224_storage": {
              "label": "struct DeciblingAuction.Auction",
              "members": [
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "increment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "resulted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(AudioInfo)3236_storage": {
              "label": "struct DeciblingAuction.AudioInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "saleCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "status",
                  "type": "t_enum(AudioStatus)3204",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Counter)1708_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TopBid)3211_storage": {
              "label": "struct DeciblingAuction.TopBid",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "75cc4073cd0ea904c848b2193e0559bb86ff616e81b7a71d1ef0d1a1bd70aabc",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "c870506d3be28d83c520d2df5af16f87156de4339a70af4005ca3a8520760014",
          "withoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6",
          "linkedWithoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "52d38ba1916f5287d4df0fb25cc17845d442abe11584353d06f3a071369482b8",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "7d01180486efa7032993ba43145e54bb3a49de93a7aa697697fccba224b1be23",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "858748f602e56e41ed0e06ba6a8769c84c9221e13111a82d147af88c350e50c2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "2a6c0536e16fb8097a3d519cdbc47c43bd26c8ca9b67268e4503bd121708173d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "6c2007adc8e8b4fd61e0aba3d222a7221e641c70639cbf526812b77d99fc8da0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingAuction": {
        "src": "contracts/DeciblingAuction.sol:11",
        "version": {
          "withMetadata": "0ad28445cd04b759e5e215402c9ebdd86a76117a8d8105b8b1b1a199e682f4fc",
          "withoutMetadata": "e18a66bd4793294f662ba77b8f485d81503a91f0614e7b61164c0f9874ff3044",
          "linkedWithoutMetadata": "e18a66bd4793294f662ba77b8f485d81503a91f0614e7b61164c0f9874ff3044"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address,address payable)",
          "createNFT(string,string)",
          "createBidding(string,uint256,uint256,uint256,uint256)",
          "bid(string,uint256)",
          "settleBiddingSession(string)",
          "updatePlatformFees(uint256,uint256)",
          "updatePlatformFeeRecipient(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingAuction",
            "src": "contracts/DeciblingAuction.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "firstSaleFee",
            "src": "contracts/DeciblingAuction.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "secondSaleFee",
            "src": "contracts/DeciblingAuction.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)2320_storage",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:14"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IERC20)831",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:15"
            },
            {
              "label": "firstSaleFee",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:18"
            },
            {
              "label": "secondSaleFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:19"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "12",
              "type": "t_address_payable",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:22"
            },
            {
              "label": "listNFT",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_string_memory_ptr,t_struct(AudioInfo)3848_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:52"
            },
            {
              "label": "tokenIdMapping",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:53"
            },
            {
              "label": "auctions",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_struct(Auction)3836_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:54"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_struct(TopBid)3823_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)831": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(AudioStatus)3816": {
              "label": "enum DeciblingAuction.AudioStatus",
              "members": [
                "MINTED",
                "BIDDING"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(AudioInfo)3848_storage)": {
              "label": "mapping(string => struct DeciblingAuction.AudioInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Auction)3836_storage)": {
              "label": "mapping(uint256 => struct DeciblingAuction.Auction)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TopBid)3823_storage)": {
              "label": "mapping(uint256 => struct DeciblingAuction.TopBid)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Auction)3836_storage": {
              "label": "struct DeciblingAuction.Auction",
              "members": [
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "increment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "resulted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(AudioInfo)3848_storage": {
              "label": "struct DeciblingAuction.AudioInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "saleCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "status",
                  "type": "t_enum(AudioStatus)3816",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Counter)2320_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TopBid)3823_storage": {
              "label": "struct DeciblingAuction.TopBid",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStaking": {
        "src": "contracts/DeciblingStaking.sol:9",
        "version": {
          "withMetadata": "f74b73bfe8bfbcd390d1545e2fc85a4bcef76b394ca78ba4494fa3752a9a6012",
          "withoutMetadata": "bf50447436823bf16fbcb2224ea1654278702ac7fbd643c7df28834c1d5e001a",
          "linkedWithoutMetadata": "bf50447436823bf16fbcb2224ea1654278702ac7fbd643c7df28834c1d5e001a"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address payable)",
          "newPool(string,uint256,uint256)",
          "updatePool(string,uint256,uint256)",
          "stake(string,uint256)",
          "unstake(string,uint256)",
          "issueToken(struct DeciblingStaking.ClaimInfo[])",
          "updatePlatformFeeRecipient(address payable)",
          "updatePlatformFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStaking",
            "src": "contracts/DeciblingStaking.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "platformFee",
            "src": "contracts/DeciblingStaking.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)831",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:11"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:13"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:15"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)4712_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)4723_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)831": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)4712_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)4712_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)4723_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)4723_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "r_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "base_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)4712_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "FroggilyToken": {
        "src": "contracts/Token.sol:7",
        "version": {
          "withMetadata": "c3523dc78d92286d72c5608e5a9087059aec06048935f18c967ade3c0987705f",
          "withoutMetadata": "530be71e2ef8cfc8c949a90724bd48d1bf36ca4e05fec91a2ae6fdc9f3deb6aa",
          "linkedWithoutMetadata": "530be71e2ef8cfc8c949a90724bd48d1bf36ca4e05fec91a2ae6fdc9f3deb6aa"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FroggilyToken",
            "src": "contracts/Token.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStakingMock": {
        "src": "contracts/mock/MockDeciblingStaking.sol:6",
        "version": {
          "withMetadata": "d446992ca3eda730e4c3f4ffcf1415db02bf4889b66e62aed5d947fc803df2a0",
          "withoutMetadata": "bad6252d13151533515b8707791bd1976e4ade04da16dd6a36ebfaf085e05414",
          "linkedWithoutMetadata": "bad6252d13151533515b8707791bd1976e4ade04da16dd6a36ebfaf085e05414"
        },
        "inherit": [
          "DeciblingStaking",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStakingMock",
            "src": "contracts/mock/MockDeciblingStaking.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)831",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:11"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:13"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:15"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)4712_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)4723_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)831": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)4712_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)4712_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)4723_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)4723_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "r_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "base_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)4712_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "c06095340e2e199a7ef7657000f049a018c4fdb55f889d4d8bccb195bbd3d547",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "c870506d3be28d83c520d2df5af16f87156de4339a70af4005ca3a8520760014",
          "withoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6",
          "linkedWithoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "52d38ba1916f5287d4df0fb25cc17845d442abe11584353d06f3a071369482b8",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "7d01180486efa7032993ba43145e54bb3a49de93a7aa697697fccba224b1be23",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "858748f602e56e41ed0e06ba6a8769c84c9221e13111a82d147af88c350e50c2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "2a6c0536e16fb8097a3d519cdbc47c43bd26c8ca9b67268e4503bd121708173d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "6c2007adc8e8b4fd61e0aba3d222a7221e641c70639cbf526812b77d99fc8da0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingAuction": {
        "src": "contracts/DeciblingAuction.sol:11",
        "version": {
          "withMetadata": "0ad28445cd04b759e5e215402c9ebdd86a76117a8d8105b8b1b1a199e682f4fc",
          "withoutMetadata": "e18a66bd4793294f662ba77b8f485d81503a91f0614e7b61164c0f9874ff3044",
          "linkedWithoutMetadata": "e18a66bd4793294f662ba77b8f485d81503a91f0614e7b61164c0f9874ff3044"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address,address payable)",
          "createNFT(string,string)",
          "createBidding(string,uint256,uint256,uint256,uint256)",
          "bid(string,uint256)",
          "settleBiddingSession(string)",
          "updatePlatformFees(uint256,uint256)",
          "updatePlatformFeeRecipient(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingAuction",
            "src": "contracts/DeciblingAuction.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "firstSaleFee",
            "src": "contracts/DeciblingAuction.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "secondSaleFee",
            "src": "contracts/DeciblingAuction.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1708_storage",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:14"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IERC20)244",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:15"
            },
            {
              "label": "firstSaleFee",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:18"
            },
            {
              "label": "secondSaleFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:19"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "12",
              "type": "t_address_payable",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:22"
            },
            {
              "label": "listNFT",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_string_memory_ptr,t_struct(AudioInfo)3236_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:52"
            },
            {
              "label": "tokenIdMapping",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:53"
            },
            {
              "label": "auctions",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_struct(Auction)3224_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:54"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_struct(TopBid)3211_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)244": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(AudioStatus)3204": {
              "label": "enum DeciblingAuction.AudioStatus",
              "members": [
                "MINTED",
                "BIDDING"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(AudioInfo)3236_storage)": {
              "label": "mapping(string => struct DeciblingAuction.AudioInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Auction)3224_storage)": {
              "label": "mapping(uint256 => struct DeciblingAuction.Auction)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TopBid)3211_storage)": {
              "label": "mapping(uint256 => struct DeciblingAuction.TopBid)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Auction)3224_storage": {
              "label": "struct DeciblingAuction.Auction",
              "members": [
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "increment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "resulted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(AudioInfo)3236_storage": {
              "label": "struct DeciblingAuction.AudioInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "saleCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "status",
                  "type": "t_enum(AudioStatus)3204",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Counter)1708_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TopBid)3211_storage": {
              "label": "struct DeciblingAuction.TopBid",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "c870506d3be28d83c520d2df5af16f87156de4339a70af4005ca3a8520760014",
          "withoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6",
          "linkedWithoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "52d38ba1916f5287d4df0fb25cc17845d442abe11584353d06f3a071369482b8",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "7d01180486efa7032993ba43145e54bb3a49de93a7aa697697fccba224b1be23",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "858748f602e56e41ed0e06ba6a8769c84c9221e13111a82d147af88c350e50c2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "2a6c0536e16fb8097a3d519cdbc47c43bd26c8ca9b67268e4503bd121708173d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "6c2007adc8e8b4fd61e0aba3d222a7221e641c70639cbf526812b77d99fc8da0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingAuction": {
        "src": "contracts/DeciblingAuction.sol:11",
        "version": {
          "withMetadata": "24a039995fb620f5e967ebbc58e26e8660ddd8a88169f88fa524feca66c05fd6",
          "withoutMetadata": "a4461722b32eed4e2389362da246145ddd60ab7e4f1b6ccfc36c3d0729ce68bd",
          "linkedWithoutMetadata": "a4461722b32eed4e2389362da246145ddd60ab7e4f1b6ccfc36c3d0729ce68bd"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address,address payable)",
          "createNFT(string,string)",
          "createBidding(string,uint256,uint256,uint256,uint256)",
          "bid(string,uint256)",
          "settleBiddingSession(string)",
          "updatePlatformFees(uint256,uint256)",
          "updatePlatformFeeRecipient(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingAuction",
            "src": "contracts/DeciblingAuction.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "firstSaleFee",
            "src": "contracts/DeciblingAuction.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "secondSaleFee",
            "src": "contracts/DeciblingAuction.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1708_storage",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:14"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IERC20)244",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:15"
            },
            {
              "label": "firstSaleFee",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:18"
            },
            {
              "label": "secondSaleFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:19"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "12",
              "type": "t_address_payable",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:22"
            },
            {
              "label": "listNFT",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_string_memory_ptr,t_struct(AudioInfo)3236_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:52"
            },
            {
              "label": "tokenIdMapping",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:53"
            },
            {
              "label": "auctions",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_struct(Auction)3224_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:54"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_struct(TopBid)3211_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)244": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(AudioStatus)3204": {
              "label": "enum DeciblingAuction.AudioStatus",
              "members": [
                "MINTED",
                "BIDDING"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(AudioInfo)3236_storage)": {
              "label": "mapping(string => struct DeciblingAuction.AudioInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Auction)3224_storage)": {
              "label": "mapping(uint256 => struct DeciblingAuction.Auction)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TopBid)3211_storage)": {
              "label": "mapping(uint256 => struct DeciblingAuction.TopBid)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Auction)3224_storage": {
              "label": "struct DeciblingAuction.Auction",
              "members": [
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "increment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "resulted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(AudioInfo)3236_storage": {
              "label": "struct DeciblingAuction.AudioInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "saleCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "status",
                  "type": "t_enum(AudioStatus)3204",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Counter)1708_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TopBid)3211_storage": {
              "label": "struct DeciblingAuction.TopBid",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "c870506d3be28d83c520d2df5af16f87156de4339a70af4005ca3a8520760014",
          "withoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6",
          "linkedWithoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "52d38ba1916f5287d4df0fb25cc17845d442abe11584353d06f3a071369482b8",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "7d01180486efa7032993ba43145e54bb3a49de93a7aa697697fccba224b1be23",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "858748f602e56e41ed0e06ba6a8769c84c9221e13111a82d147af88c350e50c2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "2a6c0536e16fb8097a3d519cdbc47c43bd26c8ca9b67268e4503bd121708173d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "6c2007adc8e8b4fd61e0aba3d222a7221e641c70639cbf526812b77d99fc8da0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingAuction": {
        "src": "contracts/DeciblingAuction.sol:11",
        "version": {
          "withMetadata": "7966cbe0107b0aa8a62349595e746ea29dd51d2fa82c6de32dd7ba7b572b8a1a",
          "withoutMetadata": "b0c6153bba5e06b4b2aa326ed5e71217c6ff8227767c93c1bd780caf2ef8c828",
          "linkedWithoutMetadata": "b0c6153bba5e06b4b2aa326ed5e71217c6ff8227767c93c1bd780caf2ef8c828"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address,address payable)",
          "createNFT(string,string)",
          "createBidding(string,uint256,uint256,uint256,uint256)",
          "bid(string,uint256)",
          "settleBiddingSession(string)",
          "updatePlatformFees(uint256,uint256)",
          "updatePlatformFeeRecipient(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingAuction",
            "src": "contracts/DeciblingAuction.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "firstSaleFee",
            "src": "contracts/DeciblingAuction.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "secondSaleFee",
            "src": "contracts/DeciblingAuction.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)1708_storage",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:14"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IERC20)244",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:15"
            },
            {
              "label": "firstSaleFee",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:18"
            },
            {
              "label": "secondSaleFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:19"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "12",
              "type": "t_address_payable",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:22"
            },
            {
              "label": "listNFT",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_string_memory_ptr,t_struct(AudioInfo)3236_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:52"
            },
            {
              "label": "tokenIdMapping",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:53"
            },
            {
              "label": "auctions",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_struct(Auction)3224_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:54"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_struct(TopBid)3211_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)244": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(AudioStatus)3204": {
              "label": "enum DeciblingAuction.AudioStatus",
              "members": [
                "MINTED",
                "BIDDING"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(AudioInfo)3236_storage)": {
              "label": "mapping(string => struct DeciblingAuction.AudioInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Auction)3224_storage)": {
              "label": "mapping(uint256 => struct DeciblingAuction.Auction)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TopBid)3211_storage)": {
              "label": "mapping(uint256 => struct DeciblingAuction.TopBid)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Auction)3224_storage": {
              "label": "struct DeciblingAuction.Auction",
              "members": [
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "increment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "resulted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(AudioInfo)3236_storage": {
              "label": "struct DeciblingAuction.AudioInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "saleCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "status",
                  "type": "t_enum(AudioStatus)3204",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Counter)1708_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TopBid)3211_storage": {
              "label": "struct DeciblingAuction.TopBid",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "6c2007adc8e8b4fd61e0aba3d222a7221e641c70639cbf526812b77d99fc8da0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStaking": {
        "src": "contracts/DeciblingStaking.sol:9",
        "version": {
          "withMetadata": "f74b73bfe8bfbcd390d1545e2fc85a4bcef76b394ca78ba4494fa3752a9a6012",
          "withoutMetadata": "bf50447436823bf16fbcb2224ea1654278702ac7fbd643c7df28834c1d5e001a",
          "linkedWithoutMetadata": "bf50447436823bf16fbcb2224ea1654278702ac7fbd643c7df28834c1d5e001a"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address payable)",
          "newPool(string,uint256,uint256)",
          "updatePool(string,uint256,uint256)",
          "stake(string,uint256)",
          "unstake(string,uint256)",
          "issueToken(struct DeciblingStaking.ClaimInfo[])",
          "updatePlatformFeeRecipient(address payable)",
          "updatePlatformFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStaking",
            "src": "contracts/DeciblingStaking.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "platformFee",
            "src": "contracts/DeciblingStaking.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:11"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:13"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:15"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)594_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)605_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)594_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)594_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)605_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)605_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "r_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "base_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)594_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStakingMock": {
        "src": "contracts/mock/MockDeciblingStaking.sol:6",
        "version": {
          "withMetadata": "d446992ca3eda730e4c3f4ffcf1415db02bf4889b66e62aed5d947fc803df2a0",
          "withoutMetadata": "bad6252d13151533515b8707791bd1976e4ade04da16dd6a36ebfaf085e05414",
          "linkedWithoutMetadata": "bad6252d13151533515b8707791bd1976e4ade04da16dd6a36ebfaf085e05414"
        },
        "inherit": [
          "DeciblingStaking",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStakingMock",
            "src": "contracts/mock/MockDeciblingStaking.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)190",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:11"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:13"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:15"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)594_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)605_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)190": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)594_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)594_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)605_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)605_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "r_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "base_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)594_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "c06095340e2e199a7ef7657000f049a018c4fdb55f889d4d8bccb195bbd3d547",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "75cc4073cd0ea904c848b2193e0559bb86ff616e81b7a71d1ef0d1a1bd70aabc",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "c870506d3be28d83c520d2df5af16f87156de4339a70af4005ca3a8520760014",
          "withoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6",
          "linkedWithoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "52d38ba1916f5287d4df0fb25cc17845d442abe11584353d06f3a071369482b8",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "7d01180486efa7032993ba43145e54bb3a49de93a7aa697697fccba224b1be23",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "858748f602e56e41ed0e06ba6a8769c84c9221e13111a82d147af88c350e50c2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "2a6c0536e16fb8097a3d519cdbc47c43bd26c8ca9b67268e4503bd121708173d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "6c2007adc8e8b4fd61e0aba3d222a7221e641c70639cbf526812b77d99fc8da0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingAuction": {
        "src": "contracts/DeciblingAuction.sol:11",
        "version": {
          "withMetadata": "50645d11004631c1d4b3b1266cc238d836d5dabde6218711bdabd734a95db570",
          "withoutMetadata": "c7eeb1bc7c4eb2c0d0b4857b5d6971bc75a0d528554f8c5bf9d4445a6958b672",
          "linkedWithoutMetadata": "c7eeb1bc7c4eb2c0d0b4857b5d6971bc75a0d528554f8c5bf9d4445a6958b672"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address,address payable)",
          "createNFT(string,string)",
          "createBidding(string,uint256,uint256,uint256,uint256)",
          "bid(string,uint256)",
          "settleBiddingSession(string)",
          "updatePlatformFees(uint256,uint256)",
          "updatePlatformFeeRecipient(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingAuction",
            "src": "contracts/DeciblingAuction.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "firstSaleFee",
            "src": "contracts/DeciblingAuction.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "secondSaleFee",
            "src": "contracts/DeciblingAuction.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)2320_storage",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:14"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IERC20)831",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:15"
            },
            {
              "label": "firstSaleFee",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:18"
            },
            {
              "label": "secondSaleFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:19"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "12",
              "type": "t_address_payable",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:22"
            },
            {
              "label": "listNFT",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_string_memory_ptr,t_struct(AudioInfo)3848_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:52"
            },
            {
              "label": "tokenIdMapping",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:53"
            },
            {
              "label": "auctions",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_struct(Auction)3836_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:54"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_struct(TopBid)3823_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)831": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(AudioStatus)3816": {
              "label": "enum DeciblingAuction.AudioStatus",
              "members": [
                "MINTED",
                "BIDDING"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(AudioInfo)3848_storage)": {
              "label": "mapping(string => struct DeciblingAuction.AudioInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Auction)3836_storage)": {
              "label": "mapping(uint256 => struct DeciblingAuction.Auction)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TopBid)3823_storage)": {
              "label": "mapping(uint256 => struct DeciblingAuction.TopBid)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Auction)3836_storage": {
              "label": "struct DeciblingAuction.Auction",
              "members": [
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "increment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "resulted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(AudioInfo)3848_storage": {
              "label": "struct DeciblingAuction.AudioInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "saleCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "status",
                  "type": "t_enum(AudioStatus)3816",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Counter)2320_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TopBid)3823_storage": {
              "label": "struct DeciblingAuction.TopBid",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStaking": {
        "src": "contracts/DeciblingStaking.sol:9",
        "version": {
          "withMetadata": "99beaceebd53a0fdd136a76fa600dd6bcb70687af84407b0aad807c8541bbce0",
          "withoutMetadata": "bf50447436823bf16fbcb2224ea1654278702ac7fbd643c7df28834c1d5e001a",
          "linkedWithoutMetadata": "bf50447436823bf16fbcb2224ea1654278702ac7fbd643c7df28834c1d5e001a"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address payable)",
          "newPool(string,uint256,uint256)",
          "updatePool(string,uint256,uint256)",
          "stake(string,uint256)",
          "unstake(string,uint256)",
          "issueToken(struct DeciblingStaking.ClaimInfo[])",
          "updatePlatformFeeRecipient(address payable)",
          "updatePlatformFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStaking",
            "src": "contracts/DeciblingStaking.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "platformFee",
            "src": "contracts/DeciblingStaking.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)831",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:11"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:13"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:15"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)4673_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)4684_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)831": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)4673_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)4673_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)4684_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)4684_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "r_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "base_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)4673_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "FroggilyToken": {
        "src": "contracts/Token.sol:7",
        "version": {
          "withMetadata": "c3523dc78d92286d72c5608e5a9087059aec06048935f18c967ade3c0987705f",
          "withoutMetadata": "530be71e2ef8cfc8c949a90724bd48d1bf36ca4e05fec91a2ae6fdc9f3deb6aa",
          "linkedWithoutMetadata": "530be71e2ef8cfc8c949a90724bd48d1bf36ca4e05fec91a2ae6fdc9f3deb6aa"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FroggilyToken",
            "src": "contracts/Token.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "c06095340e2e199a7ef7657000f049a018c4fdb55f889d4d8bccb195bbd3d547",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "6bea1a5ab509fed0a1a442e25789961101a263028f6db924c214f25d513fa8eb",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStaking": {
        "src": "contracts/DeciblingStaking.sol:9",
        "version": {
          "withMetadata": "649811c3ea1dc70af3e26258bf07eaf3a77bd8abeac223964f562cef46b58022",
          "withoutMetadata": "73e9be93c49fb8a9302b5f74e5bb20e88eab06ff64f29cd25dd10fbed7d13a27",
          "linkedWithoutMetadata": "73e9be93c49fb8a9302b5f74e5bb20e88eab06ff64f29cd25dd10fbed7d13a27"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address payable)",
          "newPool(string,uint256,uint256)",
          "updatePool(string,uint256,uint256)",
          "stake(string,uint256)",
          "unstake(string,uint256)",
          "issueToken(struct DeciblingStaking.ClaimInfo[])",
          "updatePlatformFeeRecipient(address payable)",
          "updatePlatformFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStaking",
            "src": "contracts/DeciblingStaking.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "platformFee",
            "src": "contracts/DeciblingStaking.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)182",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:11"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:13"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:15"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)586_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)597_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)182": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)586_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)586_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)597_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)597_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "r_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "base_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)586_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "c06095340e2e199a7ef7657000f049a018c4fdb55f889d4d8bccb195bbd3d547",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "ea978cc653db373b3132bfe2b4b8ac3a644fafaecf3c32e718fe2e10bdb1632e",
          "withoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6",
          "linkedWithoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "f26a9ff5848b697612cc309ba25163d2f8d28a1431cc9384e019024e77ad4440",
          "withoutMetadata": "b162e6649ec3c5283cacc5476750fddbdbf09da53c35bebcbee0e5e3559e624f",
          "linkedWithoutMetadata": "b162e6649ec3c5283cacc5476750fddbdbf09da53c35bebcbee0e5e3559e624f"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "1242a773cd5902ed6f856fd9621f73996535feec3345f09c196c4d9550fc5de1",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "7d01180486efa7032993ba43145e54bb3a49de93a7aa697697fccba224b1be23",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "e3240dcae25e3e4842cb1fc35a3386132219e2d6d70f8aed1d58e5b565586571",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "6bea1a5ab509fed0a1a442e25789961101a263028f6db924c214f25d513fa8eb",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingAuction": {
        "src": "contracts/DeciblingAuction.sol:11",
        "version": {
          "withMetadata": "45ed4a6f6d9be2d42f2510d9c4f7cf688f558643b7216274dc7e8e343a32f833",
          "withoutMetadata": "0ecb5c4119671a87d4264c585b955b8d000575ced366e6659b4d83d4640f86c3",
          "linkedWithoutMetadata": "0ecb5c4119671a87d4264c585b955b8d000575ced366e6659b4d83d4640f86c3"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address,address payable)",
          "createNFT(string,string)",
          "createBidding(string,uint256,uint256,uint256,uint256)",
          "bid(string,uint256)",
          "settleBiddingSession(string)",
          "updatePlatformFees(uint256,uint256)",
          "updatePlatformFeeRecipient(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingAuction",
            "src": "contracts/DeciblingAuction.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "firstSaleFee",
            "src": "contracts/DeciblingAuction.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "secondSaleFee",
            "src": "contracts/DeciblingAuction.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)2185_storage",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:14"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IERC20)810",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:15"
            },
            {
              "label": "firstSaleFee",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:18"
            },
            {
              "label": "secondSaleFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:19"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "12",
              "type": "t_address_payable",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:22"
            },
            {
              "label": "listNFT",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_string_memory_ptr,t_struct(AudioInfo)2876_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:52"
            },
            {
              "label": "tokenIdMapping",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:53"
            },
            {
              "label": "auctions",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_struct(Auction)2864_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:54"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_struct(TopBid)2851_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)810": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(AudioStatus)2844": {
              "label": "enum DeciblingAuction.AudioStatus",
              "members": [
                "MINTED",
                "BIDDING"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(AudioInfo)2876_storage)": {
              "label": "mapping(string => struct DeciblingAuction.AudioInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Auction)2864_storage)": {
              "label": "mapping(uint256 => struct DeciblingAuction.Auction)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TopBid)2851_storage)": {
              "label": "mapping(uint256 => struct DeciblingAuction.TopBid)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Auction)2864_storage": {
              "label": "struct DeciblingAuction.Auction",
              "members": [
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "increment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "resulted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(AudioInfo)2876_storage": {
              "label": "struct DeciblingAuction.AudioInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "saleCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "status",
                  "type": "t_enum(AudioStatus)2844",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Counter)2185_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TopBid)2851_storage": {
              "label": "struct DeciblingAuction.TopBid",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStaking": {
        "src": "contracts/DeciblingStaking.sol:9",
        "version": {
          "withMetadata": "263724e3fa9d297a3efaaee0484c71fb2ba0600a2272f96632c2f4e0f1404ef9",
          "withoutMetadata": "73e9be93c49fb8a9302b5f74e5bb20e88eab06ff64f29cd25dd10fbed7d13a27",
          "linkedWithoutMetadata": "73e9be93c49fb8a9302b5f74e5bb20e88eab06ff64f29cd25dd10fbed7d13a27"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address payable)",
          "newPool(string,uint256,uint256)",
          "updatePool(string,uint256,uint256)",
          "stake(string,uint256)",
          "unstake(string,uint256)",
          "issueToken(struct DeciblingStaking.ClaimInfo[])",
          "updatePlatformFeeRecipient(address payable)",
          "updatePlatformFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStaking",
            "src": "contracts/DeciblingStaking.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "platformFee",
            "src": "contracts/DeciblingStaking.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)810",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:11"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:13"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:15"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)3701_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)3712_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)810": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)3701_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)3701_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)3712_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)3712_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "r_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "base_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)3701_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "FroggilyToken": {
        "src": "contracts/Token.sol:7",
        "version": {
          "withMetadata": "32e2391480a090b498713b50d5355648ab0e3bf7ad8149dc3ba4aa9be1f86e82",
          "withoutMetadata": "bfeff27f7e92aa2120eeaa51ae9bb6f696fd7038434cd96851ec749ce453fdaa",
          "linkedWithoutMetadata": "bfeff27f7e92aa2120eeaa51ae9bb6f696fd7038434cd96851ec749ce453fdaa"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FroggilyToken",
            "src": "contracts/Token.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6f405f5f52fc5fa4f96d6c5a0d9bcb722d99104abc0eb2388d158d16f208bce7",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "75cc4073cd0ea904c848b2193e0559bb86ff616e81b7a71d1ef0d1a1bd70aabc",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "c870506d3be28d83c520d2df5af16f87156de4339a70af4005ca3a8520760014",
          "withoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6",
          "linkedWithoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "52d38ba1916f5287d4df0fb25cc17845d442abe11584353d06f3a071369482b8",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "7d01180486efa7032993ba43145e54bb3a49de93a7aa697697fccba224b1be23",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "858748f602e56e41ed0e06ba6a8769c84c9221e13111a82d147af88c350e50c2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "2a6c0536e16fb8097a3d519cdbc47c43bd26c8ca9b67268e4503bd121708173d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "6c2007adc8e8b4fd61e0aba3d222a7221e641c70639cbf526812b77d99fc8da0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingAuction": {
        "src": "contracts/DeciblingAuction.sol:11",
        "version": {
          "withMetadata": "50645d11004631c1d4b3b1266cc238d836d5dabde6218711bdabd734a95db570",
          "withoutMetadata": "c7eeb1bc7c4eb2c0d0b4857b5d6971bc75a0d528554f8c5bf9d4445a6958b672",
          "linkedWithoutMetadata": "c7eeb1bc7c4eb2c0d0b4857b5d6971bc75a0d528554f8c5bf9d4445a6958b672"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address,address payable)",
          "createNFT(string,string)",
          "createBidding(string,uint256,uint256,uint256,uint256)",
          "bid(string,uint256)",
          "settleBiddingSession(string)",
          "updatePlatformFees(uint256,uint256)",
          "updatePlatformFeeRecipient(address payable)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingAuction",
            "src": "contracts/DeciblingAuction.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "firstSaleFee",
            "src": "contracts/DeciblingAuction.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "secondSaleFee",
            "src": "contracts/DeciblingAuction.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)2320_storage",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:14"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IERC20)831",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:15"
            },
            {
              "label": "firstSaleFee",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:18"
            },
            {
              "label": "secondSaleFee",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:19"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "12",
              "type": "t_address_payable",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:22"
            },
            {
              "label": "listNFT",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_string_memory_ptr,t_struct(AudioInfo)3848_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:52"
            },
            {
              "label": "tokenIdMapping",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:53"
            },
            {
              "label": "auctions",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_struct(Auction)3836_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:54"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_uint256,t_struct(TopBid)3823_storage)",
              "contract": "DeciblingAuction",
              "src": "contracts/DeciblingAuction.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)831": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(AudioStatus)3816": {
              "label": "enum DeciblingAuction.AudioStatus",
              "members": [
                "MINTED",
                "BIDDING"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(AudioInfo)3848_storage)": {
              "label": "mapping(string => struct DeciblingAuction.AudioInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Auction)3836_storage)": {
              "label": "mapping(uint256 => struct DeciblingAuction.Auction)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TopBid)3823_storage)": {
              "label": "mapping(uint256 => struct DeciblingAuction.TopBid)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Auction)3836_storage": {
              "label": "struct DeciblingAuction.Auction",
              "members": [
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "increment",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "resulted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(AudioInfo)3848_storage": {
              "label": "struct DeciblingAuction.AudioInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "saleCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "status",
                  "type": "t_enum(AudioStatus)3816",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Counter)2320_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TopBid)3823_storage": {
              "label": "struct DeciblingAuction.TopBid",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "DeciblingStaking": {
        "src": "contracts/DeciblingStaking.sol:9",
        "version": {
          "withMetadata": "8d7456c88b36bd9880526d29ba45d83b20b7bd4574f1ea6c24036ebadd66a06e",
          "withoutMetadata": "bf50447436823bf16fbcb2224ea1654278702ac7fbd643c7df28834c1d5e001a",
          "linkedWithoutMetadata": "bf50447436823bf16fbcb2224ea1654278702ac7fbd643c7df28834c1d5e001a"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address payable)",
          "newPool(string,uint256,uint256)",
          "updatePool(string,uint256,uint256)",
          "stake(string,uint256)",
          "unstake(string,uint256)",
          "issueToken(struct DeciblingStaking.ClaimInfo[])",
          "updatePlatformFeeRecipient(address payable)",
          "updatePlatformFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeciblingStaking",
            "src": "contracts/DeciblingStaking.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "platformFee",
            "src": "contracts/DeciblingStaking.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "froyToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)831",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:11"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:13"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "3",
              "type": "t_address_payable",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:15"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)4673_storage))",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)4684_storage)",
              "contract": "DeciblingStaking",
              "src": "contracts/DeciblingStaking.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)831": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(StakeInfo)4673_storage)": {
              "label": "mapping(address => struct DeciblingStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_struct(StakeInfo)4673_storage))": {
              "label": "mapping(string => mapping(address => struct DeciblingStaking.StakeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(PoolInfo)4684_storage)": {
              "label": "mapping(string => struct DeciblingStaking.PoolInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)4684_storage": {
              "label": "struct DeciblingStaking.PoolInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "r_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "r",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "base",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "base_to_owner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(StakeInfo)4673_storage": {
              "label": "struct DeciblingStaking.StakeInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unclaimAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unclaimAmountToOwner",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "FroggilyToken": {
        "src": "contracts/Token.sol:7",
        "version": {
          "withMetadata": "c3523dc78d92286d72c5608e5a9087059aec06048935f18c967ade3c0987705f",
          "withoutMetadata": "530be71e2ef8cfc8c949a90724bd48d1bf36ca4e05fec91a2ae6fdc9f3deb6aa",
          "linkedWithoutMetadata": "530be71e2ef8cfc8c949a90724bd48d1bf36ca4e05fec91a2ae6fdc9f3deb6aa"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FroggilyToken",
            "src": "contracts/Token.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.9"
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6f405f5f52fc5fa4f96d6c5a0d9bcb722d99104abc0eb2388d158d16f208bce7",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.9"
      }
    }
  ]
}